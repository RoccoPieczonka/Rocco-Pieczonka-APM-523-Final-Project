data = [
    0.5118  0.9505  0.1442  0.9486  0.6413  0.8526  0.5929  0.2801
    0.5118  0.9505  0.1442  0.9486  0.6413  0.8526  0.5929  0.2801
    0.5496  0.0276  0.7595  0.5381  0.1479  0.8196  0.6833  0.7871
    0.3297  0.7884  0.3032  0.4535  0.1916  0.8024  0.1913  0.0816
    0.1297  0.9494  0.4032  0.4535  0.1916  0.8024  0.1913  0.4016
    0.7504  0.2804  0.4852  0.9807  0.2740  0.0071  0.6457  0.7199
    0.9617  0.7248  0.5412  0.2769  0.8356  0.2819  0.2152  0.6383
    0.1607  0.9699  0.5161  0.1159  0.8051  0.9637  0.1505  0.4822
    0.6235  0.7767  0.6101  0.9179  0.8057  0.9627  0.2225  0.6265
    0.0396  0.5286  0.4593  0.0623  0.6735  0.9191  0.8268  0.8855
];

s0 = data(:, 1); s1 = data(:, 2); s2 = data(:, 3); s3 = data(:, 4);
y0 = data(:, 5); y1 = data(:, 6); y2 = data(:, 7); y3 = data(:, 8);

n = 10; 
k = 4;
gamma = 1;

S = [s0 s1 s2 s3]; 
Y = [y0 y1 y2 y3]; 
B0 = gamma * eye(n);

L = zeros(k, k);
for i = 1:k
    for j = 1:i-1
        L(i, j) = S(:, i)' * Y(:, j);
    end
end

D = zeros(k, k);
for i = 1:k
    D(i, i) = S(:, i)' * Y(:, i);
end

U_compact = [B0 * S Y];
M_compact = [S' * B0 * S L; L' -D];
V_compact = [S' * B0; Y'];
B_k = B0 - U_compact * (M_compact \ V_compact);

eig_standard = eig(B_k);
disp('Eigenvalues from eig(B_k):');
disp(sort(eig_standard));



U_k = [S B0 * Y]; 
[Q_k, R_k] = qr(U_k, 0);
M_k = -inv([S' * B0 * S L; L' -D]); 
[V_k, Lambda_k] = eig(R_k * M_k * R_k');
Lambda_k = diag(Lambda_k); 
P_k = Q_k * V_k; 
eig_structured = [gamma + Lambda_k; gamma * ones(n - 2*k, 1)];
disp('Eigenvalues from structured method:');
disp(sort(eig_structured));

B_k_reconstructed = gamma * eye(n) + P_k * diag(Lambda_k) * P_k';
error_norm = norm(B_k - B_k_reconstructed, 'fro');
disp('Frobenius norm of B_k - (gamma I + P_k Lambda_k P_k^T):');
disp(error_norm);

B_k_norm = norm(B_k, 'fro');
disp('Frobenius norm of B_k:');
disp(B_k_norm);

disp('Difference between sorted eigenvalues (standard - structured):');
disp(sort(eig_standard) - sort(eig_structured));
